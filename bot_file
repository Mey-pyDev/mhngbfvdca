import disnake #https://ru.guide.disnake.dev/interactions/slash-commands
from disnake.ext import commands, tasks
import datetime
import asyncio
import random

intents = disnake.Intents.default()
intents.message_content = True
intents.reactions = True
intents.members = True

command_sync_flags = commands.CommandSyncFlags.default()
command_sync_flags.sync_commands_debug = True

bot = commands.Bot(command_prefix='-', command_sync_flags=command_sync_flags, intents=intents)

items = [{'emoji': '‚åö', 'name': '**Upwork** Pavlo', 'status': None, 'message_id': None},
         {'emoji': '‚åö', 'name': '**Hubstuff** Pavlo', 'status': None, 'message_id': None},
         {'emoji': '‚åö', 'name': '**Hubstuff** "SoundBox"', 'status': None, 'message_id': None},
         {'emoji': '‚åö', 'name': '**Clockify**', 'status': None, 'message_id': None},
         {'emoji': '‚åö', 'name': '**Hubstuff** Varvara', 'status': None, 'message_id': None},]
log = []
magic_ball_responses = ["–ë–µ—Å—Å–ø–æ—Ä–Ω–æ", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º",
                        "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª",
                        "–î–∞", "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å",
                        "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å", "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π",
                        "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]


@bot.slash_command(description="–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–∞–≥–∏—á–µ—Å–∫–æ–º—É —à–∞—Ä—É")
async def magicball(inter, question: str):
    response = random.choice(magic_ball_responses)
    await inter.response.send_message(f"*{question.capitalize().strip('?')}?*\n–ú–æ–π –æ—Ç–≤–µ—Ç: **{response}**")


@bot.event
async def on_ready():
    print(f'Logged in as {bot.user}')
    try:
        await bot.tree.sync()  # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥
        print("Slash commands have been synchronized.")
    except Exception as e:
        print(f"Error during command synchronization: {e}")

@bot.slash_command(name='tracker', description='–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç—Ä–µ–∫–µ—Ä–æ–≤')
async def items_command(inter):
    await inter.response.defer()
    for item in items:
        message = await inter.channel.send(f"`üü¢` {item['name']} —Å–≤–æ–±–æ–¥–µ–Ω\n")
        item['message_id'] = message.id
        await message.add_reaction(item['emoji'])
    # await inter.send(content="Tracker list ‚Üì\n\n", ephemeral=False)

@bot.slash_command(name='log', description='–ü–æ–∫–∞–∑–∞—Ç—å –∂—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–æ–≤')
async def log_command(inter, member: disnake.Member = None):
    await inter.response.defer()  # –£–≤–µ–¥–æ–º–ª—è–µ–º Discord, —á—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è
    if log:
        if member:
            log_entries = [f"{entry['time']} - {entry['item']} {entry['action']} {entry['user'].mention}" for entry in log if entry['user'] == member]
            if log_entries:
                message = await inter.edit_original_message(content=f">>> –ñ—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–æ–≤ –¥–ª—è {member.mention}:\n" + "\n".join(log_entries))
            else:
                message = await inter.edit_original_message(content=f">>> –ñ—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–æ–≤ –¥–ª—è {member.mention} –ø—É—Å—Ç.")
        else:
            log_entries = [f"{entry['time']} - {entry['item']} {entry['action']} {entry['user'].mention}" for entry in log]
            message = await inter.edit_original_message(content=">>> –ñ—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–æ–≤:\n" + "\n".join(log_entries))
    else:
        message = await inter.edit_original_message(content=">>> –ñ—É—Ä–Ω–∞–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–µ—Ä–æ–≤ –ø—É—Å—Ç.")

    await delete_message_after_delay(inter.channel, message, delay=300)

async def delete_message_after_delay(channel, message, delay):
    await asyncio.sleep(delay)
    await message.delete()

async def process_reaction(payload, add):
    guild = bot.get_guild(payload.guild_id)
    channel = guild.get_channel(payload.channel_id)
    message = await channel.fetch_message(payload.message_id)
    user = guild.get_member(payload.user_id)

    if user is None or user.bot:
        return

    if message.author != bot.user:
        return

    for item in items:
        if payload.message_id == item.get('message_id') and str(payload.emoji) == item['emoji']:
            if add:
                if item['status'] is None:
                    # –ó–∞–Ω–∏–º–∞–µ–º –ø—É–Ω–∫—Ç
                    item['status'] = user
                    await message.edit(content=f"`üî¥` {item['name']} –∑–∞–Ω—è—Ç {user.mention}\n")
                    await channel.send(f'{user.mention} —Å–µ–π—á–∞—Å –Ω–∞ —Ç—Ä–µ–∫–µ—Ä–µ {item["name"]}', delete_after=60)
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∂—É—Ä–Ω–∞–ª
                    log.append({
                        'time': datetime.datetime.now().strftime("%H:%M:%S"),
                        'action': '–∑–∞–Ω—è–ª',
                        'item': item['name'],
                        'user': user
                    })

                else:
                    # –ü—É–Ω–∫—Ç —É–∂–µ –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                    await channel.send(f'{user.mention}, —ç—Ç–æ—Ç —Ç—Ä–µ–∫–µ—Ä —É–∂–µ –∑–∞–Ω—è—Ç {item["status"].mention}.', delete_after=5)
                    await message.remove_reaction(payload.emoji, user)
            else:
                if item['status'] == user:
                    # –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º
                    item['status'] = None
                    await message.edit(content=f"`üü¢` {item['name']} —Å–≤–æ–±–æ–¥–µ–Ω\n")
                    await channel.send(f'{user.mention} –≤—ã—à–µ–ª —Å —Ç—Ä–µ–∫–µ—Ä–∞ {item["name"]}', delete_after=60)
                    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∂—É—Ä–Ω–∞–ª
                    log.append({
                        'time': datetime.datetime.now().strftime("%H:%M:%S"),
                        'action': '–æ—Å–≤–æ–±–æ–¥–∏–ª',
                        'item': item['name'],
                        'user': user
                    })

@bot.event
async def on_raw_reaction_add(payload):
    await process_reaction(payload, True)

@bot.event
async def on_raw_reaction_remove(payload):
    await process_reaction(payload, False)

bot.run('MTI0NzU0MTY2NjU2MzQ4OTg2NA.GsTV9S.H6HAPkA03QiyDlhh3AH2yODmAL7-s6QzyAzmh4')
